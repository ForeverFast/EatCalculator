@using EatCalculator.UI.Entities.Products.Components

@inherits BaseDialogComponent

<div class="@GetCssName(nameof(UpdateMealDialog)) d-flex flex-column align-center overflow-hidden w-100 h-100 @ClassName"
@attributes="@UserAttributes">
    <MudContainer Class="d-flex flex-row align-center border-b rounded-0 px-0 py-1">
        <Condition Evaluation="_isEditTitle">
            <NotMatch>
                <MudIconButton Icon="@Icons.Material.Filled.ArrowBack"
                               OnClick="OnBackToDayButtonClick"
                               Class="me-1" />
                <MudText Typo="Typo.h5"
                         Class="mx-1">@_mealCopy.Title</MudText>
                <MudIconButton Icon="@Icons.Material.Filled.Edit"
                               Class="mx-1" />
            </NotMatch>
            <Match>

            </Match>
        </Condition>
    </MudContainer>
    <MudContainer Class="d-flex flex-column align-center overflow-hidden px-2">
        <MudContainer Class="meal-list-container overflow-x-hidden overflow-y-auto px-2 my-2">
            <MudPaper Width="100%" Elevation="0"
                      Class="sticky border-b rounded-0 py-1 z-10" Style="top: 0">
                <MudText Typo="Typo.h5">Порции</MudText>
            </MudPaper>
            <Condition Evaluation="_portions.Count > 0">
                <Match>
                    <MudContainer Class="d-flex flex-column align-center px-0">
                        <Iterations Items="_portions" Context="portion">
                            <MudContainer @key="portion"
                                          Class="portion-block d-flex flex-row align-center border rounded px-2 py-1 mt-2">
                                @{
                                    var product = _productStateFacade.GetProductById(portion.ProductId);
                                }
                                <MudText Class="px-1">@product!.Title</MudText>
                                <ProductPFCInfo Product="product" />
                                <div class="d-flex flex-row align-center ms-auto px-1">
                                    <MudNumericField T="double"
                                                     Value="portion.ProteinPercentages" ValueChanged="newValue => OnProteinValueChanged(portion, newValue)"
                                                     Label="Б %"
                                                     Min="0" Max="100" HideSpinButtons="true"
                                                     Margin="Margin.Dense" Variant="Variant.Outlined"
                                                     Class="portion-block__input px-1" />
                                    <MudNumericField T="double"
                                                     Value="portion.FatPercentages" ValueChanged="newValue => OnFatValueChanged(portion, newValue)"
                                                     Label="Ж %"
                                                     Min="0" Max="100" HideSpinButtons="true"
                                                     Margin="Margin.Dense" Variant="Variant.Outlined"
                                                     Class="portion-block__input px-1" />
                                    <MudNumericField T="double"
                                                     Value="portion.CarbohydratePercentages" ValueChanged="newValue => OnCarbohydrateValueChanged(portion, newValue)"
                                                     Label="У %"
                                                     Min="0" Max="100" HideSpinButtons="true"
                                                     Margin="Margin.Dense" Variant="Variant.Outlined"
                                                     Class="portion-block__input px-1" />
                                </div>
                                <div>
                                    <MudIconButton Icon="@Icons.Material.Filled.Delete"
                                                   Color="Color.Error" Size="Size.Small"
                                                   OnClick="_ => OnDeleteProductFromMealButtonClick(portion)" />
                                </div>
                            </MudContainer>
                        </Iterations>
                    </MudContainer>
                </Match>
                <NotMatch>
                    <MudText Align="Align.Center"
                             Class="py-2">
                        Здесь пока ничего нет
                    </MudText>
                </NotMatch>
            </Condition>
            <Condition Evaluation="_portionsValidation.Count > 0">
                <Match>
                    <MudContainer Class="d-flex flex-column align-start px-0 my-2">
                        <MudText Typo="Typo.h6">Подсказки</MudText>
                        <Iterations Items="_portionsValidation" Context="portionsValidationMessage">
                            <MudText Color="Color.Info">@portionsValidationMessage</MudText>
                        </Iterations>
                    </MudContainer>
                </Match>
            </Condition>
        </MudContainer>
        <MudDivider />
        <MudContainer Class="meal-list-container overflow-x-hidden overflow-y-auto px-2 my-2">
            <MudPaper Width="100%" Elevation="0"
                      Class="sticky border-b rounded-0 py-1 z-10" Style="top: 0">
                <MudText Typo="Typo.h5">Продукты</MudText>
            </MudPaper>
            <Condition Evaluation="_notIncludedProducts.Count > 0">
                <Match>
                    <Iterations Items="_notIncludedProducts" Context="product">
                        <ProductRow @key="product" Product="product">
                            <OptionalContent>
                                <MudPaper Width="100%" Elevation="0"
                                          Class="d-flex flex-row align-center w-100">
                                    <ProductPFCInfo Product="product" />
                                    <MudIconButton Icon="@Icons.Material.Filled.Add"
                                                   Size="Size.Small"
                                                   OnClick="_ => OnAddProductToMealButtonClick(product)"
                                                   Class="ms-auto" />
                                </MudPaper>
                            </OptionalContent>
                        </ProductRow>
                    </Iterations>
                </Match>
                <NotMatch>
                    <MudText Align="Align.Center"
                             Class="py-2">
                        Доступные продукты отсутствуют
                    </MudText>
                </NotMatch>
            </Condition>
        </MudContainer>
    </MudContainer>
    <MudContainer Class="py-2 mt-auto">
        <MudDivider />
        <MudContainer Class="d-flex">
            <MudButton Variant="Variant.Filled" Color="Color.Primary"
                       OnClick="OnSaveButtonClick"
                       Class="ms-auto mt-4">
                Сохранить
            </MudButton>
        </MudContainer>
    </MudContainer>
</div>